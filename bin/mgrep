#!/bin/bash

set -eu

SKIP_DIRS="--exclude-dir=.hg --exclude-dir=.git --exclude-dir=_cache"
SKIP_FILES="--exclude=*.beam --exclude=*.jar --exclude=*.JPG --exclude=*.ARW --exclude=*.RAF"
GREP_OPTS="--color -Prn"
CASE_SENSITIVE="-i"
CONVERT_ENCODING=n
FIND_ROOT=""
FILE_FILTER=""
unset NO_COMMENTS
VERBOSE=n

while getopts "cd:D:f:F:g:inv" opt ; do
    case $opt in
        c) CONVERT_ENCODING=y ;;
        d) FIND_ROOT="$OPTARG" ;;
        D) SKIP_DIRS="$SKIP_DIRS --exclude-dir=$OPTARG" ;;
        f) FILE_FILTER="${FILE_FILTER:-} --include=*$OPTARG*" ;;
        F) FILE_FILTER="${FILE_FILTER:-} --exclude=*$OPTARG*" ;;
        g) GREP_OPTS="$GREP_OPTS -$OPTARG" ;;
        i) CASE_SENSITIVE="" ;;
        n) NO_COMMENTS="^[^%].*" ;;
        v) VERBOSE=y
    esac
done
shift `expr $OPTIND - 1`

[ -z "$FIND_ROOT" ] && FIND_ROOT=.

GREP_OPTS="${GREP_OPTS} ${CASE_SENSITIVE}"

UNWANTED="$SKIP_DIRS $SKIP_FILES"

log () {
    echo "$*" >&2
}
# log if VERBOSE
logv () {
    if [ "$VERBOSE" = "y" ] ; then
        echo "$*" >&2
    fi
}

warn_no_comments_simplistic() {
    if [ "${NO_COMMENTS:-}x" != "x" ] ; then
        echo "WARNING: The 'NO_COMMENTS' option is simplistic and will filter out more than necessary" 1>&2
    fi
}

logv "FIND_ROOT: '$FIND_ROOT'"
logv "FILE_FILTER: '$FILE_FILTER'"

find_grep () {
    logv "regular find-grep"
    local PATTERN="${NO_COMMENTS:-}$*"
    local FIND="grep $GREP_OPTS ${FILE_FILTER:-} $UNWANTED -e \"$PATTERN\" \"$FIND_ROOT\""
    logv "$FIND"
    eval $FIND
}

find_grep_recur () {
    logv "recursive grep"
    local PATTERN="${NO_COMMENTS:-}$1"
    local FIND="grep -d skip -PriZl $FILE_FILTER $UNWANTED -e \"$PATTERN\" $FIND_ROOT |
        xargs -0 grep --color -d skip -Pin -e \"$2\""
    log "$FIND"
    eval $FIND
}

if [ $# -gt 1 ] ; then
    find_grep_recur "$1" "$2"
else
    if [ "$CONVERT_ENCODING" = "y" ] ; then
        find_grep $(echo $@ | iconv -f utf8 -t latin1)
    else
        find_grep "$@"
    fi
fi

warn_no_comments_simplistic
