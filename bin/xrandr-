#!/bin/bash

INT_DEV=$(xrandr | grep ' connected primary' | awk '{print $1}')
INT_RES=$(xrandr | grep -A1 ' connected primary' | tail -n +2 | awk '{print $1}')
ALL_DEVS=$(xrandr | grep connected | awk '{print $1}')
EXT_DEVS=( ${ALL_DEVS[@]/eDP-1} )
EXT_DEV=$(xrandr | grep -w connected | grep -v $INT_DEV | awk '{print $1}')
EXT_RES=$(xrandr | sed -n '/ connected/,$ p' | tail -n +2 | sed -n '/ connected/,$ p' | sed -n '2 p' | awk '{print $1}')
FULL_COLOUR=""
[[ "$EXT_DEV" =~ HDMI ]] && FULL_COLOUR='--set "Broadcast RGB" "Full"'

printf "INT_DEV = %8s INT_RES = %s\n" $INT_DEV $INT_RES
printf "EXT_DEV = %8s EXT_RES = %s\n" $EXT_DEV $EXT_RES
echo "EXT_DEVS=${EXT_DEVS[@]}"

echo "INT_DEV=$INT_DEV $INT_RES"
echo "EXT_DEVS=${EXT_DEVS[@]}"
echo "EXT_DEV=$EXT_DEV $EXT_RES"

single() {
    echo "Setting xrandr for single screen."
    local exts=""
    for ext in ${EXT_DEVS[@]} ; do
        exts="$exts --output $ext --off"
    done
    local cmd="xrandr --output $INT_DEV --mode $INT_RES $exts"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

dual_right_of() {
    local cmd="xrandr --output $INT_DEV --mode $INT_RES --output $EXT_DEV --mode $EXT_RES --right-of $INT_DEV"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

dual_left_of() {
    local cmd="xrandr --output $INT_DEV --mode $INT_RES --output $EXT_DEV --mode $EXT_RES --left-of $INT_DEV"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

laptop_right_of_secondary() {
    local cmd="xrandr --output $EXT_DEV --mode $EXT_RES --output $INT_DEV --mode $INT_RES --right-of $EXT_DEV"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

dual_right_of_max() {
    local MAX_OTHER=$(xrandr | grep "$EXT_DEV" | awk '{print $3}' | awk -F+ '{print $1}')
    local cmd="xrandr --output $INT_DEV --mode $INT_RES --output $EXT_DEV --mode $MAX_OTHER --right-of $INT_DEV $FULL_COLOUR"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

dual_clone() {
    local cmd="xrandr --output $INT_DEV --mode $EXT_RES --output $EXT_DEV --mode $EXT_RES --same-as $INT_DEV"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

usage() {
    echo "usage: $(basename $0) -[dms]

    -d      dual screen, right-of maximizing resolution of other screen
    -D      dual screen, right-of (same resolution)
    -m      dual screen, mirror (clone)
    -s      single screen
"
}

summary() {
    xrandr | grep -E 'connected|Screen'
    
}

if [ $# -eq 0 ] ; then
    usage
    xrandr
    exit 1
fi

while getopts "Ddlmrs" opt ; do
    case $opt in
        D) dual_right_of ;;
        d) dual_right_of_max ;;
        l) dual_left_of ;;
        r) laptop_right_of_secondary ;;
        m) dual_clone ;;
        s) single ;;
    esac
done
shift `expr $OPTIND - 1`
