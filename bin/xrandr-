#!/bin/bash

case $(hostname) in
    bluetang)
        INT_RES=1600x900
        INT_DEV="LVDS1"
        EXT_DEVS="VGA1 HDMI1 DP1"
        ;;
    tubarao)
	INT_RES=2560x1440
        INT_DEV="eDP1"
        EXT_DEVS="DP1 DP2 HDMI1 HDMI2 VIRTUAL1"
        ;;
    harv)
	INT_RES=1920x1080
        INT_DEV="eDP-1"
        EXT_DEVS="DP-1 DP-2 HDMI-1 HDMI-2"
        ;;
esac

EXT_DEV=$(xrandr | grep -w connected | grep -v $INT_DEV | awk '{print $1}')
#EXTERNAL_RESOLUTION=$(xrandr | grep -w connected | grep -v $INT_DEV | awk '{print $2}' | sed 's/\(.*\)+.*/\1/')
EXT_RES=$(xrandr | sed -n '/ connected/,$ p' | tail -n +2 | sed -n '/ connected/,$ p' | sed -n '2 p' | awk '{print $1}')

single() {
    echo "Setting xrandr for single screen."
    local exts=""
    for ext in $EXT_DEVS ; do
        exts="$exts --output $ext --off"
    done
    local cmd="xrandr --output $INT_DEV --mode $INT_RES $exts"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

dual_right_of() {
    local cmd="xrandr --output $INT_DEV --mode $INT_RES --output $EXT_DEV --mode $EXT_RES --right-of $INT_DEV"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

dual_right_of_max() {
    local MAX_OTHER=$(xrandr | sed -n "/^$EXT_DEV/,// p" | grep \+ | awk '{print $1}')
    xrandr --output $INT_DEV --mode $INT_RES \
           --output $EXT_DEV --mode $MAX_OTHER --right-of $INT_DEV
}

dual_clone() {
    local cmd="xrandr --output $INT_DEV --mode $EXT_RES --output $EXT_DEV --mode $EXT_RES --same-as $INT_DEV"
    echo "xrandr cmd = $cmd"
    eval "$cmd"
}

usage() {
    echo "usage: $(basename $0) -[dms]

    -d      dual screen, right-of
    -D      dual screen, right-of maximazing resolution of other screen
    -m      dual screen, mirror
    -s      single screen
"
}

if [ $# -eq 0 ] ; then
    usage
    xrandr
    exit 1
fi



while getopts "Ddms" opt ; do
    case $opt in
        d) dual_right_of ;;
        D) dual_right_of_max ;;
        m) dual_clone ;;
        s) single ;;
    esac
done
shift `expr $OPTIND - 1`
